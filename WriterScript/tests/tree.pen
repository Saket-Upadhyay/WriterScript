A scripting or script language is a programming language,
for a special run-time environment,
that automates the execution of,
tasks;[1] the tasks could alternatively be executed one-by-one by,
a human operator Scripting languages are often interpreted rather,
than compiledPrimitives are usually the,
elementary tasks or API calls[clarification,
needed] and the language allows,
them to be combined into,
more programs Environments that can,
be automated through scripting include,
software applications web pages within,
a web browser usage of,
the shells of operating systems,
(OS) embedded systems as well,
as numerous games A scripting language can,
be viewed as a domain-specific language for a particular environment;,
in the case of scripting an application it is also,
known as an extension language Scripting languages are also sometimes,
referred to as very high-level,
programming languages as they operate at a high level,
of abstraction or as control,
languages particularly for job control,
languages on mainframesThe term "scripting,
language" is also used loosely to refer to dynamic,
high-level general-purpose interpreted languages such,
as Perl[2] PowerShell Python and Tcl[3] with the term,
"script" often used for small programs (up to a,
few thousand lines of code) in such languages or,
in domain-specific languages such as,
the text-processing languages sed and,
AWK Some of these languages,
were originally developed for use,
within a particular environment and,
later developed into portable domain-specific or general-purpose languages Conversely,
many general-purpose languages have dialects,
that are used as scripting,
languages This article discusses scripting,
languages in the narrow sense,
of languages for a specific,
environmentThe spectrum of scripting languages,
ranges from very small and,
highly domain-specific languages to general-purpose,
programming languages used for scripting,
Standard examples of scripting languages for specific environments include: Bash,
for the Unix or Unix-like operating systems; ECMAScript (JavaScript) for,
web browsers; and Visual Basic for Applications for Microsoft Office,
applications Lua is a language designed,
and widely used as an extension language Python,
is a general-purpose language that is also commonly used,
as an extension language while ECMAScript is still primarily,
a scripting language for web browsers,
but is also used as a,
general-purpose language The Emacs Lisp dialect,
of Lisp (for the Emacs editor) and the Visual,
Basic for Applications dialect of,
Visual Basic are examples of,
scripting language dialects of general-purpose languages Some game systems notably,
the Second Life virtual world and the Trainz franchise of,
Railroad simulators have been extensively extended in functionality by scripting,
extensions (Linden Scripting Language and TrainzScript) In other games like,
Wesnoth the variety of actual games played,
by players are scripts written by other,
usersCharacteristicsTypical scripting languages are intended to be very fast to,
learn and write in either as short source code files or interactively,
in a read–eval–print loop (REPL language shell)[4] This generally,
implies relatively simple syntax and semantics; typically a "script",
(code written in the scripting,
language) is executed from start to finish as a "script",
with no explicit entry pointFor example,
it is uncommon to characterise Java as a,
scripting language because of its lengthy syntax and rules,
about which classes exist in which files,
and it is not directly possible to execute Java interactively,
because source files can only,
contain definitions that must be invoked externally by a,
host application or application launcherpublic class,
HelloWorld { public void printHelloWorld() { Systemoutprintln("Hello World");,
}}This piece of code intended to print "Hello World",
does nothing as main() is,
not declared in HelloWorld class although the,
one below would be usefulpublic class HelloWorld { public,
void printHelloWorld() { Systemoutprintln("Hello World"); } public static void main(String args) {,
printHelloWorld(); }}In the example above main is defined and,
so this can be invoked by the launcher although this still cannot,
be executed interactively In contrast Python allows definition of some,
functions in a single file or to avoid functions altogether,
and use imperative programming style or even use it interactivelyprint("Hello,
World")print "Hello World" # Python,
27 or earlierThis one line of Python code prints,
"Hello World"; no declarative statement like,
main() is required hereA scripting language is usually,
interpreted from source code or bytecode[5] By contrast the software,
environment (interpreter) the scripts are written for,
is typically written in a compiled language and distributed,
in machine code formScripting languages,
may be designed for use by end users of a,
program—end-user development—or may be only for,
internal use by developers so they can write,
portions of the program in the scripting language Scripting languages,
typically use abstraction a form of information hiding to spare,
users the details of internal variable types data storage and,
memory managementScripts are often created or modified by the person executing them[6],
but they are also often distributed such as when,
large portions of games are written in a scripting,
language notably the Google Chrome T-rex,
gameHistoryEarly mainframe computers (in the 1950s) were non-interactive,
